#security
#security.ignored=/**

#database
#spring.datasource.url= jdbc:mysql://localhost:3306/beachliga_db
#spring.datasource.username=root
#spring.datasource.password=root

# Keep the connection alive if idle for a long time (needed in production)
#spring.datasource.testWhileIdle = true
#spring.datasource.validationQuery = SELECT 1

# Show or not log for each sql query
#spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update)
#spring.jpa.hibernate.ddl-auto = update

# Naming strategy
#spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager)

# The SQL dialect makes Hibernate generate better SQL for the chosen database
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

# JSP view files configuration
#spring.mvc.view.prefix: /WEB-INF/jsp/
#spring.mvc.view.suffix: .jsp

# Thymeleaf
#spring.thymeleaf.mode=LEGACYHTML5
#spring.thymeleaf.cache=false

#OLD ONE
-----------------------------------------------------------------------------------------------
#NEW ONE

# ===============================
# = DATA SOURCE
# ===============================
spring.datasource.url = jdbc:mysql://localhost:3306/reserve_db?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC
spring.datasource.username = root
spring.datasource.password = root
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# ===============================
# = JPA / HIBERNATE
# ===============================
spring.jpa.show-sql = true
spring.jpa.hibernate.ddl-auto = update
#depracated spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

# ===============================
# = Thymeleaf configurations
# ===============================
#spring.thymeleaf.mode = LEGACYHTML5
#spring.thymeleaf.cache = false

# ==============================================================
# = Spring Security / Queries for AuthenticationManagerBuilder
# ==============================================================
#spring.queries.users-query = select email, password, active from user where email=?
#spring.queries.roles-query = select u.email, r.role from user u inner join user_role ur on(u.user_id=ur.user_id) inner join role r on(ur.role_id=r.role_id) where u.email=?
